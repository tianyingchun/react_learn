

/**
 *
 * It uses `<NoteApp/>` to render the app on the server. You can create isomorphic apps by rendering React on both Server
 * and Client.
 */

// for ie8 Polyfills
var es5Shim = require("es5-shim/es5-shim");
var es5Sham = require("es5-shim/es5-sham");
var consolePolyfill = require("console-polyfill");

var React = require('react');
var NoteApp=require('./components/NoteApp.jsx');
var App = React.createClass({
    render: function() {
        return (
            <html>
                <head lang="en">
                    <base href="/"/>
                    <meta charSet="utf-8"/>
                    <meta httpEquiv="X-UA-Compatible" content="IE=edge"/>
                    <meta name="viewport" content="width=device-width, initial-scale=1"/>
                    <title>React Note app</title>
                    <link href="css/bootstrap.css" rel="stylesheet"/>
                    <link href="css/app.css" rel="stylesheet"/>
                </head>
                <body>
                    <NoteApp/>
                    <script type="text/javascript" src="/js/browserify/bundle.js"></script>
                </body>
            </html>
        )
    }
});


module.exports=App;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtZWQuanMiLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHOztBQUVILG9CQUFvQjtBQUNwQixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUMzQyxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUMzQyxJQUFJLGVBQWUsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQzs7QUFFbEQsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdCLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBQ2hELElBQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUM7SUFDeEIsTUFBTSxFQUFFLFdBQVc7UUFDZjtZQUNJLENBQUMsSUFBSSxDQUFDO2dCQUNGLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7b0JBQ1osQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtvQkFDaEIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRTtvQkFDdkIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUU7b0JBQ3JELENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLHFDQUFxQyxFQUFFO29CQUNyRSxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUUsS0FBSyxDQUFDO29CQUM3QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRTtvQkFDakQsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFO2dCQUMvQyxFQUFFLElBQUksQ0FBQztnQkFDUCxDQUFDLElBQUksQ0FBQztvQkFDRixDQUFDLE9BQU8sRUFBRTtvQkFDVixDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDLEVBQUUsTUFBTSxDQUFDO2dCQUMzRSxFQUFFLElBQUksQ0FBQztZQUNYLEVBQUUsSUFBSSxDQUFDO1NBQ1Y7S0FDSjtBQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0g7O0FBRUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbi8qKlxuICpcbiAqIEl0IHVzZXMgYDxOb3RlQXBwLz5gIHRvIHJlbmRlciB0aGUgYXBwIG9uIHRoZSBzZXJ2ZXIuIFlvdSBjYW4gY3JlYXRlIGlzb21vcnBoaWMgYXBwcyBieSByZW5kZXJpbmcgUmVhY3Qgb24gYm90aCBTZXJ2ZXJcbiAqIGFuZCBDbGllbnQuXG4gKi9cblxuLy8gZm9yIGllOCBQb2x5ZmlsbHNcbnZhciBlczVTaGltID0gcmVxdWlyZShcImVzNS1zaGltL2VzNS1zaGltXCIpO1xudmFyIGVzNVNoYW0gPSByZXF1aXJlKFwiZXM1LXNoaW0vZXM1LXNoYW1cIik7XG52YXIgY29uc29sZVBvbHlmaWxsID0gcmVxdWlyZShcImNvbnNvbGUtcG9seWZpbGxcIik7XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgTm90ZUFwcD1yZXF1aXJlKCcuL2NvbXBvbmVudHMvTm90ZUFwcC5qc3gnKTtcbnZhciBBcHAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxodG1sPlxuICAgICAgICAgICAgICAgIDxoZWFkIGxhbmc9XCJlblwiPlxuICAgICAgICAgICAgICAgICAgICA8YmFzZSBocmVmPVwiL1wiLz5cbiAgICAgICAgICAgICAgICAgICAgPG1ldGEgY2hhclNldD1cInV0Zi04XCIvPlxuICAgICAgICAgICAgICAgICAgICA8bWV0YSBodHRwRXF1aXY9XCJYLVVBLUNvbXBhdGlibGVcIiBjb250ZW50PVwiSUU9ZWRnZVwiLz5cbiAgICAgICAgICAgICAgICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xXCIvPlxuICAgICAgICAgICAgICAgICAgICA8dGl0bGU+UmVhY3QgTm90ZSBhcHA8L3RpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8bGluayBocmVmPVwiY3NzL2Jvb3RzdHJhcC5jc3NcIiByZWw9XCJzdHlsZXNoZWV0XCIvPlxuICAgICAgICAgICAgICAgICAgICA8bGluayBocmVmPVwiY3NzL2FwcC5jc3NcIiByZWw9XCJzdHlsZXNoZWV0XCIvPlxuICAgICAgICAgICAgICAgIDwvaGVhZD5cbiAgICAgICAgICAgICAgICA8Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgPE5vdGVBcHAvPlxuICAgICAgICAgICAgICAgICAgICA8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBzcmM9XCIvanMvYnJvd3NlcmlmeS9idW5kbGUuanNcIj48L3NjcmlwdD5cbiAgICAgICAgICAgICAgICA8L2JvZHk+XG4gICAgICAgICAgICA8L2h0bWw+XG4gICAgICAgIClcbiAgICB9XG59KTtcblxuXG5tb2R1bGUuZXhwb3J0cz1BcHA7Il19